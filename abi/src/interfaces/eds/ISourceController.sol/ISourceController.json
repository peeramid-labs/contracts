[
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "contract IRepository",
        "name": "repository",
        "type": "address"
      },
      {
        "components": [
          {
            "components": [
              {
                "internalType": "uint8",
                "name": "release",
                "type": "uint8"
              },
              {
                "internalType": "uint16",
                "name": "build",
                "type": "uint16"
              }
            ],
            "internalType": "struct Tag",
            "name": "baseVersion",
            "type": "tuple"
          },
          {
            "internalType": "enum VersionRequirementTypes",
            "name": "requirementType",
            "type": "uint8"
          }
        ],
        "indexed": false,
        "internalType": "struct VersionRequirement",
        "name": "versionRequired",
        "type": "tuple"
      }
    ],
    "name": "RepositoryAdded",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "contract IRepository",
        "name": "repository",
        "type": "address"
      },
      {
        "components": [
          {
            "components": [
              {
                "internalType": "uint8",
                "name": "release",
                "type": "uint8"
              },
              {
                "internalType": "uint16",
                "name": "build",
                "type": "uint16"
              }
            ],
            "internalType": "struct Tag",
            "name": "baseVersion",
            "type": "tuple"
          },
          {
            "internalType": "enum VersionRequirementTypes",
            "name": "requirementType",
            "type": "uint8"
          }
        ],
        "indexed": false,
        "internalType": "struct VersionRequirement",
        "name": "versionRequired",
        "type": "tuple"
      }
    ],
    "name": "VersionRequirementSet",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "contract IRepository[]",
        "name": "repositories",
        "type": "address[]"
      },
      {
        "components": [
          {
            "components": [
              {
                "internalType": "uint8",
                "name": "release",
                "type": "uint8"
              },
              {
                "internalType": "uint16",
                "name": "build",
                "type": "uint16"
              }
            ],
            "internalType": "struct Tag",
            "name": "baseVersion",
            "type": "tuple"
          },
          {
            "internalType": "enum VersionRequirementTypes",
            "name": "requirementType",
            "type": "uint8"
          }
        ],
        "internalType": "struct VersionRequirement[]",
        "name": "requirements",
        "type": "tuple[]"
      }
    ],
    "name": "addBatchDistributors",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "contract IRepository",
        "name": "repository",
        "type": "address"
      },
      {
        "components": [
          {
            "components": [
              {
                "internalType": "uint8",
                "name": "release",
                "type": "uint8"
              },
              {
                "internalType": "uint16",
                "name": "build",
                "type": "uint16"
              }
            ],
            "internalType": "struct Tag",
            "name": "baseVersion",
            "type": "tuple"
          },
          {
            "internalType": "enum VersionRequirementTypes",
            "name": "requirementType",
            "type": "uint8"
          }
        ],
        "internalType": "struct VersionRequirement",
        "name": "versionRequired",
        "type": "tuple"
      }
    ],
    "name": "addDistributor",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getDistributors",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "contract IRepository",
        "name": "repository",
        "type": "address"
      }
    ],
    "name": "getVersionRequired",
    "outputs": [
      {
        "components": [
          {
            "components": [
              {
                "internalType": "uint8",
                "name": "release",
                "type": "uint8"
              },
              {
                "internalType": "uint16",
                "name": "build",
                "type": "uint16"
              }
            ],
            "internalType": "struct Tag",
            "name": "baseVersion",
            "type": "tuple"
          },
          {
            "internalType": "enum VersionRequirementTypes",
            "name": "requirementType",
            "type": "uint8"
          }
        ],
        "internalType": "struct VersionRequirement",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "distributor",
        "type": "address"
      }
    ],
    "name": "isDistributor",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "contract IRepository[]",
        "name": "repositories",
        "type": "address[]"
      }
    ],
    "name": "removeBatchDistributors",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "contract IRepository",
        "name": "repository",
        "type": "address"
      }
    ],
    "name": "removeDistributor",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "contract IRepository[]",
        "name": "repositories",
        "type": "address[]"
      },
      {
        "components": [
          {
            "components": [
              {
                "internalType": "uint8",
                "name": "release",
                "type": "uint8"
              },
              {
                "internalType": "uint16",
                "name": "build",
                "type": "uint16"
              }
            ],
            "internalType": "struct Tag",
            "name": "baseVersion",
            "type": "tuple"
          },
          {
            "internalType": "enum VersionRequirementTypes",
            "name": "requirementType",
            "type": "uint8"
          }
        ],
        "internalType": "struct VersionRequirement[]",
        "name": "requirements",
        "type": "tuple[]"
      }
    ],
    "name": "setBatchVersionRequirements",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "contract IRepository",
        "name": "repository",
        "type": "address"
      },
      {
        "components": [
          {
            "components": [
              {
                "internalType": "uint8",
                "name": "release",
                "type": "uint8"
              },
              {
                "internalType": "uint16",
                "name": "build",
                "type": "uint16"
              }
            ],
            "internalType": "struct Tag",
            "name": "baseVersion",
            "type": "tuple"
          },
          {
            "internalType": "enum VersionRequirementTypes",
            "name": "requirementType",
            "type": "uint8"
          }
        ],
        "internalType": "struct VersionRequirement",
        "name": "versionRequired",
        "type": "tuple"
      }
    ],
    "name": "setVersionRequirement",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]
